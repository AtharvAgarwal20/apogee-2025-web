/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export function Blimp({ scale = 1, position = [0, 0, 0], ...props }) {
  const { nodes, materials } = useGLTF("/models/AirshipOptimised1-v1.glb");

  const blimpRef = useRef();

  useFrame((state, delta) => {
    const rotSpeedFactor = 10;
    blimpRef.current.position.x = Math.sin(
      state.clock.elapsedTime / rotSpeedFactor
    );
    blimpRef.current.position.z = -Math.cos(
      state.clock.elapsedTime / rotSpeedFactor
    );
    blimpRef.current.rotation.y -= delta / rotSpeedFactor;
    // console.log(blimpRef.current.rotation.y);
  });

  return (
    <group
      {...props}
      dispose={null}
      scale={scale}
      position={position}
      ref={blimpRef}
      rotation={[0, Math.PI / 2, 0]}
    >
      <mesh
        geometry={nodes.Cube.geometry}
        material={materials["air Ship"]}
        position={[0, 0.24, -2.103]}
      />
      <mesh geometry={nodes.Cylinder004.geometry} material={materials.glass} />
    </group>
  );
}

useGLTF.preload("/models/AirshipOptimised1-v1.glb");
